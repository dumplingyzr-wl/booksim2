// $Id$

// Copyright (c) 2007-2015, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

// A single cross 10X10 cross bar under injection mode

vc_allocator = max_size; 
sw_allocator = max_size;
routing_function = dest_tag;
sim_type = throughput;
traffic = uniform;
hold_switch_for_packet = 1;

topology = fly;
k = 4;
n = 3;

num_vcs = 8;
private_buf_size = 8;
buf_size = 128;
buffer_policy = private;
output_buffer_size = 1;
input_speedup = 1;
output_speedup = 1;

injection_rate = 0.5;

packet_size = 4;

use_read_write = 1;
write_fraction = 0.5;

read_request_size = 1;
read_reply_size = 4;
write_request_size = 4;
write_reply_size = 1;

read_request_begin_vc = 0;
read_request_end_vc = 7;
write_request_begin_vc = 0;
write_request_end_vc = 7;
read_reply_begin_vc = 0;
read_reply_end_vc = 7;
write_reply_begin_vc = 0;
write_reply_end_vc = 7;

sample_period = 10000;
warmup_periods = 1;
max_samples = 10;

routing_delay  = 0;
vc_alloc_delay = 1;
sw_alloc_delay = 1;
st_final_delay = 1;
